vendor_name = ModelSim
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/testbench.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/adder2.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/Processor.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/control.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/ripple_adder_9.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/reg_8.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/Synchronizers.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/HexDriver.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/full_adder.sv
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/output_files/Chain1.cdf
source_file = 1, C:/Users/arcy cruz/OneDrive/Documents/ECE385/lab4/db/lab-4-8-bit-mulitplier.cbx.xml
design_name = Processor
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, Processor, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, Processor, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, Processor, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, Processor, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, Processor, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, Processor, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, Processor, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, Processor, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, Processor, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, Processor, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, Processor, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, Processor, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, Processor, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, Processor, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, Processor, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, Processor, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, Processor, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, Processor, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, Processor, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, Processor, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, Processor, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, Processor, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, Processor, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, Processor, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, Processor, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, Processor, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, Processor, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, Processor, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, Processor, 1
instance = comp, \Aval[0]~output , Aval[0]~output, Processor, 1
instance = comp, \Aval[1]~output , Aval[1]~output, Processor, 1
instance = comp, \Aval[2]~output , Aval[2]~output, Processor, 1
instance = comp, \Aval[3]~output , Aval[3]~output, Processor, 1
instance = comp, \Aval[4]~output , Aval[4]~output, Processor, 1
instance = comp, \Aval[5]~output , Aval[5]~output, Processor, 1
instance = comp, \Aval[6]~output , Aval[6]~output, Processor, 1
instance = comp, \Aval[7]~output , Aval[7]~output, Processor, 1
instance = comp, \Bval[0]~output , Bval[0]~output, Processor, 1
instance = comp, \Bval[1]~output , Bval[1]~output, Processor, 1
instance = comp, \Bval[2]~output , Bval[2]~output, Processor, 1
instance = comp, \Bval[3]~output , Bval[3]~output, Processor, 1
instance = comp, \Bval[4]~output , Bval[4]~output, Processor, 1
instance = comp, \Bval[5]~output , Bval[5]~output, Processor, 1
instance = comp, \Bval[6]~output , Bval[6]~output, Processor, 1
instance = comp, \Bval[7]~output , Bval[7]~output, Processor, 1
instance = comp, \Xval~output , Xval~output, Processor, 1
instance = comp, \Clk~input , Clk~input, Processor, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, Processor, 1
instance = comp, \SW[3]~input , SW[3]~input, Processor, 1
instance = comp, \syncForSwtiches[3]|q , syncForSwtiches[3]|q, Processor, 1
instance = comp, \Reset_Load_Clear~input , Reset_Load_Clear~input, Processor, 1
instance = comp, \syncForReset|q~0 , syncForReset|q~0, Processor, 1
instance = comp, \syncForReset|q , syncForReset|q, Processor, 1
instance = comp, \Run~input , Run~input, Processor, 1
instance = comp, \syncForRun|q~0 , syncForRun|q~0, Processor, 1
instance = comp, \syncForRun|q , syncForRun|q, Processor, 1
instance = comp, \fsm|curr_state~43 , fsm|curr_state~43, Processor, 1
instance = comp, \fsm|curr_state.CAX , fsm|curr_state.CAX, Processor, 1
instance = comp, \fsm|curr_state~35 , fsm|curr_state~35, Processor, 1
instance = comp, \fsm|curr_state.L1 , fsm|curr_state.L1, Processor, 1
instance = comp, \fsm|curr_state~27 , fsm|curr_state~27, Processor, 1
instance = comp, \fsm|curr_state.S1 , fsm|curr_state.S1, Processor, 1
instance = comp, \fsm|curr_state~36 , fsm|curr_state~36, Processor, 1
instance = comp, \fsm|curr_state.L2 , fsm|curr_state.L2, Processor, 1
instance = comp, \fsm|curr_state~28 , fsm|curr_state~28, Processor, 1
instance = comp, \fsm|curr_state.S2 , fsm|curr_state.S2, Processor, 1
instance = comp, \fsm|curr_state~37 , fsm|curr_state~37, Processor, 1
instance = comp, \fsm|curr_state.L3 , fsm|curr_state.L3, Processor, 1
instance = comp, \fsm|curr_state~29 , fsm|curr_state~29, Processor, 1
instance = comp, \fsm|curr_state.S3 , fsm|curr_state.S3, Processor, 1
instance = comp, \fsm|curr_state~38 , fsm|curr_state~38, Processor, 1
instance = comp, \fsm|curr_state.L4 , fsm|curr_state.L4, Processor, 1
instance = comp, \fsm|curr_state~30 , fsm|curr_state~30, Processor, 1
instance = comp, \fsm|curr_state.S4 , fsm|curr_state.S4, Processor, 1
instance = comp, \fsm|curr_state~39 , fsm|curr_state~39, Processor, 1
instance = comp, \fsm|curr_state.L5 , fsm|curr_state.L5, Processor, 1
instance = comp, \fsm|curr_state~31 , fsm|curr_state~31, Processor, 1
instance = comp, \fsm|curr_state.S5 , fsm|curr_state.S5, Processor, 1
instance = comp, \fsm|curr_state~40 , fsm|curr_state~40, Processor, 1
instance = comp, \fsm|curr_state.L6 , fsm|curr_state.L6, Processor, 1
instance = comp, \fsm|curr_state~32 , fsm|curr_state~32, Processor, 1
instance = comp, \fsm|curr_state.S6 , fsm|curr_state.S6, Processor, 1
instance = comp, \fsm|curr_state~41 , fsm|curr_state~41, Processor, 1
instance = comp, \fsm|curr_state.L7 , fsm|curr_state.L7, Processor, 1
instance = comp, \fsm|curr_state~33 , fsm|curr_state~33, Processor, 1
instance = comp, \fsm|curr_state.S7 , fsm|curr_state.S7, Processor, 1
instance = comp, \fsm|curr_state~42 , fsm|curr_state~42, Processor, 1
instance = comp, \fsm|curr_state.L8 , fsm|curr_state.L8, Processor, 1
instance = comp, \fsm|curr_state~34 , fsm|curr_state~34, Processor, 1
instance = comp, \fsm|curr_state.S8 , fsm|curr_state.S8, Processor, 1
instance = comp, \fsm|Selector17~0 , fsm|Selector17~0, Processor, 1
instance = comp, \fsm|curr_state.Comp , fsm|curr_state.Comp, Processor, 1
instance = comp, \fsm|curr_state~26 , fsm|curr_state~26, Processor, 1
instance = comp, \fsm|curr_state.Reset , fsm|curr_state.Reset, Processor, 1
instance = comp, \SW[4]~input , SW[4]~input, Processor, 1
instance = comp, \syncForSwtiches[4]|q , syncForSwtiches[4]|q, Processor, 1
instance = comp, \SW[6]~input , SW[6]~input, Processor, 1
instance = comp, \syncForSwtiches[6]|q , syncForSwtiches[6]|q, Processor, 1
instance = comp, \SW[2]~input , SW[2]~input, Processor, 1
instance = comp, \syncForSwtiches[2]|q~feeder , syncForSwtiches[2]|q~feeder, Processor, 1
instance = comp, \syncForSwtiches[2]|q , syncForSwtiches[2]|q, Processor, 1
instance = comp, \RegB|Data_Out~3 , RegB|Data_Out~3, Processor, 1
instance = comp, \fsm|WideOr19~1 , fsm|WideOr19~1, Processor, 1
instance = comp, \fsm|WideOr19~0 , fsm|WideOr19~0, Processor, 1
instance = comp, \RegB|Data_Out[0]~1 , RegB|Data_Out[0]~1, Processor, 1
instance = comp, \RegB|Data_Out[2] , RegB|Data_Out[2], Processor, 1
instance = comp, \SW[1]~input , SW[1]~input, Processor, 1
instance = comp, \syncForSwtiches[1]|q , syncForSwtiches[1]|q, Processor, 1
instance = comp, \RegB|Data_Out~2 , RegB|Data_Out~2, Processor, 1
instance = comp, \RegB|Data_Out[1] , RegB|Data_Out[1], Processor, 1
instance = comp, \SW[0]~input , SW[0]~input, Processor, 1
instance = comp, \syncForSwtiches[0]|q , syncForSwtiches[0]|q, Processor, 1
instance = comp, \RegB|Data_Out~0 , RegB|Data_Out~0, Processor, 1
instance = comp, \RegB|Data_Out[0] , RegB|Data_Out[0], Processor, 1
instance = comp, \adder|FA0|s~0 , adder|FA0|s~0, Processor, 1
instance = comp, \fsm|Selector19~0 , fsm|Selector19~0, Processor, 1
instance = comp, \fsm|WideOr20~1 , fsm|WideOr20~1, Processor, 1
instance = comp, \fsm|WideOr20~0 , fsm|WideOr20~0, Processor, 1
instance = comp, \fsm|WideOr20 , fsm|WideOr20, Processor, 1
instance = comp, \Mux[4]~3 , Mux[4]~3, Processor, 1
instance = comp, \fsm|fn~0 , fsm|fn~0, Processor, 1
instance = comp, \Mux[3]~2 , Mux[3]~2, Processor, 1
instance = comp, \Mux[2]~1 , Mux[2]~1, Processor, 1
instance = comp, \Mux[1]~0 , Mux[1]~0, Processor, 1
instance = comp, \adder|FA0|c~0 , adder|FA0|c~0, Processor, 1
instance = comp, \adder|FA1|c~0 , adder|FA1|c~0, Processor, 1
instance = comp, \adder|FA2|c~0 , adder|FA2|c~0, Processor, 1
instance = comp, \adder|FA3|c~0 , adder|FA3|c~0, Processor, 1
instance = comp, \adder|FA4|s , adder|FA4|s, Processor, 1
instance = comp, \SW[7]~input , SW[7]~input, Processor, 1
instance = comp, \syncForSwtiches[7]|q , syncForSwtiches[7]|q, Processor, 1
instance = comp, \adder|FA7|s~0 , adder|FA7|s~0, Processor, 1
instance = comp, \RegX|Data~0 , RegX|Data~0, Processor, 1
instance = comp, \RegX|Data , RegX|Data, Processor, 1
instance = comp, \RegA|Data_Out~8 , RegA|Data_Out~8, Processor, 1
instance = comp, \RegA|Data_Out~9 , RegA|Data_Out~9, Processor, 1
instance = comp, \Mux[6]~5 , Mux[6]~5, Processor, 1
instance = comp, \SW[5]~input , SW[5]~input, Processor, 1
instance = comp, \syncForSwtiches[5]|q~feeder , syncForSwtiches[5]|q~feeder, Processor, 1
instance = comp, \syncForSwtiches[5]|q , syncForSwtiches[5]|q, Processor, 1
instance = comp, \Mux[5]~4 , Mux[5]~4, Processor, 1
instance = comp, \adder|FA4|c~0 , adder|FA4|c~0, Processor, 1
instance = comp, \adder|FA5|c~0 , adder|FA5|c~0, Processor, 1
instance = comp, \adder|FA6|c~0 , adder|FA6|c~0, Processor, 1
instance = comp, \RegA|Data_Out~10 , RegA|Data_Out~10, Processor, 1
instance = comp, \RegA|Data_Out[4]~1 , RegA|Data_Out[4]~1, Processor, 1
instance = comp, \RegA|Data_Out[7] , RegA|Data_Out[7], Processor, 1
instance = comp, \adder|FA6|s , adder|FA6|s, Processor, 1
instance = comp, \RegA|Data_Out~7 , RegA|Data_Out~7, Processor, 1
instance = comp, \RegA|Data_Out[6] , RegA|Data_Out[6], Processor, 1
instance = comp, \adder|FA5|s , adder|FA5|s, Processor, 1
instance = comp, \RegA|Data_Out~6 , RegA|Data_Out~6, Processor, 1
instance = comp, \RegA|Data_Out[5] , RegA|Data_Out[5], Processor, 1
instance = comp, \RegA|Data_Out~5 , RegA|Data_Out~5, Processor, 1
instance = comp, \RegA|Data_Out[4] , RegA|Data_Out[4], Processor, 1
instance = comp, \adder|FA3|s , adder|FA3|s, Processor, 1
instance = comp, \RegA|Data_Out~4 , RegA|Data_Out~4, Processor, 1
instance = comp, \RegA|Data_Out[3] , RegA|Data_Out[3], Processor, 1
instance = comp, \adder|FA2|s , adder|FA2|s, Processor, 1
instance = comp, \RegA|Data_Out~3 , RegA|Data_Out~3, Processor, 1
instance = comp, \RegA|Data_Out[2] , RegA|Data_Out[2], Processor, 1
instance = comp, \adder|FA1|s , adder|FA1|s, Processor, 1
instance = comp, \RegA|Data_Out~2 , RegA|Data_Out~2, Processor, 1
instance = comp, \RegA|Data_Out[1] , RegA|Data_Out[1], Processor, 1
instance = comp, \RegA|Data_Out~0 , RegA|Data_Out~0, Processor, 1
instance = comp, \RegA|Data_Out[0] , RegA|Data_Out[0], Processor, 1
instance = comp, \RegB|Data_Out~8 , RegB|Data_Out~8, Processor, 1
instance = comp, \RegB|Data_Out[7] , RegB|Data_Out[7], Processor, 1
instance = comp, \RegB|Data_Out~7 , RegB|Data_Out~7, Processor, 1
instance = comp, \RegB|Data_Out[6] , RegB|Data_Out[6], Processor, 1
instance = comp, \RegB|Data_Out~6 , RegB|Data_Out~6, Processor, 1
instance = comp, \RegB|Data_Out[5] , RegB|Data_Out[5], Processor, 1
instance = comp, \RegB|Data_Out~5 , RegB|Data_Out~5, Processor, 1
instance = comp, \RegB|Data_Out[4] , RegB|Data_Out[4], Processor, 1
instance = comp, \RegB|Data_Out~4 , RegB|Data_Out~4, Processor, 1
instance = comp, \RegB|Data_Out[3] , RegB|Data_Out[3], Processor, 1
instance = comp, \HexBL|WideOr6~0 , HexBL|WideOr6~0, Processor, 1
instance = comp, \HexBL|WideOr5~0 , HexBL|WideOr5~0, Processor, 1
instance = comp, \HexBL|WideOr4~0 , HexBL|WideOr4~0, Processor, 1
instance = comp, \HexBL|WideOr3~0 , HexBL|WideOr3~0, Processor, 1
instance = comp, \HexBL|WideOr2~0 , HexBL|WideOr2~0, Processor, 1
instance = comp, \HexBL|WideOr1~0 , HexBL|WideOr1~0, Processor, 1
instance = comp, \HexBL|WideOr0~0 , HexBL|WideOr0~0, Processor, 1
instance = comp, \HexBU|WideOr6~0 , HexBU|WideOr6~0, Processor, 1
instance = comp, \HexBU|WideOr5~0 , HexBU|WideOr5~0, Processor, 1
instance = comp, \HexBU|WideOr4~0 , HexBU|WideOr4~0, Processor, 1
instance = comp, \HexBU|WideOr3~0 , HexBU|WideOr3~0, Processor, 1
instance = comp, \HexBU|WideOr2~0 , HexBU|WideOr2~0, Processor, 1
instance = comp, \HexBU|WideOr1~0 , HexBU|WideOr1~0, Processor, 1
instance = comp, \HexBU|WideOr0~0 , HexBU|WideOr0~0, Processor, 1
instance = comp, \HexAL|WideOr6~0 , HexAL|WideOr6~0, Processor, 1
instance = comp, \HexAL|WideOr5~0 , HexAL|WideOr5~0, Processor, 1
instance = comp, \HexAL|WideOr4~0 , HexAL|WideOr4~0, Processor, 1
instance = comp, \HexAL|WideOr3~0 , HexAL|WideOr3~0, Processor, 1
instance = comp, \HexAL|WideOr2~0 , HexAL|WideOr2~0, Processor, 1
instance = comp, \HexAL|WideOr1~0 , HexAL|WideOr1~0, Processor, 1
instance = comp, \HexAL|WideOr0~0 , HexAL|WideOr0~0, Processor, 1
instance = comp, \HexAU|WideOr6~0 , HexAU|WideOr6~0, Processor, 1
instance = comp, \HexAU|WideOr5~0 , HexAU|WideOr5~0, Processor, 1
instance = comp, \HexAU|WideOr4~0 , HexAU|WideOr4~0, Processor, 1
instance = comp, \HexAU|WideOr3~0 , HexAU|WideOr3~0, Processor, 1
instance = comp, \HexAU|WideOr2~0 , HexAU|WideOr2~0, Processor, 1
instance = comp, \HexAU|WideOr1~0 , HexAU|WideOr1~0, Processor, 1
instance = comp, \HexAU|WideOr0~0 , HexAU|WideOr0~0, Processor, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, Processor, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, Processor, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, Processor, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
